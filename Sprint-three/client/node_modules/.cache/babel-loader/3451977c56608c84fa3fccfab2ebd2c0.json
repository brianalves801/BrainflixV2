{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Desktop\\\\Brian-Alves-Brainflix\\\\sprint-two\\\\src\\\\components\\\\Maincontent.js\";\nimport React, { Component } from \"react\";\nimport Viewicon from \"../Assets/Icons/PNG/views.png\";\nimport Likeicon from \"../Assets/Icons/PNG/likes.png\";\nimport axios from \"axios\";\nimport Footer from \"./Footer\";\nimport Comments from \"./Comments\";\nimport Header from \"./Header\";\nimport Hero from \"./Hero\";\nimport ImageInfo from \"./ImageInfo\";\n\nclass Maincontent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    console.log(\"did the component mount? check the url: \", this.props.videoInfo.match.params.id);\n    const theId = this.props.videoInfo.match.params.id;\n    await axios.all([axios.get(`https://project-2-api.herokuapp.com/videos?api_key=bb1b5cb2-60cb-4779-bfb3-fa4acdb34abc`), axios.get(`https://project-2-api.herokuapp.com/videos/${theId}?api_key=bb1b5cb2-60cb-4779-bfb3-fa4acdb34abc`)]).then(responseArray => {\n      console.log(\"RESPONSES:::::\");\n      console.log(responseArray[0].data);\n      console.log(responseArray[1].data);\n      this.setState({\n        videos: responseArray[0].data,\n        videoInfo: responseArray[1].data\n      });\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (this.state) {\n      // console.log(\"the state exists\", this.state);\n      if (this.state.videoInfo) {\n        // console.log(\"the state video info exists!\", this.state.videoInfo);\n        // console.log(\"the current video is:\", this.state.videoInfo.id);\n        if (this.state.videoInfo.id !== this.props.videoInfo.match.params.id) {\n          const theId = this.props.videoInfo.match.params.id;\n          await axios.all([axios.get(`https://project-2-api.herokuapp.com/videos?api_key=bb1b5cb2-60cb-4779-bfb3-fa4acdb34abc`), axios.get(`https://project-2-api.herokuapp.com/videos/${theId}?api_key=bb1b5cb2-60cb-4779-bfb3-fa4acdb34abc`)]).then(responseArray => {\n            console.log(\"RESPONSES:::::\");\n            console.log(responseArray[0].data);\n            console.log(responseArray[1].data);\n            this.setState({\n              videos: responseArray[0].data,\n              videoInfo: responseArray[1].data\n            });\n          });\n        }\n\n        console.log(\"the current video ID is: \", this.props.videoInfo.match.params.id);\n      }\n\n      if (this.state.videos) {\n        console.log(\"the state videos exists!\", this.state.videos);\n      }\n    }\n  }\n\n  render() {\n    if (this.state.videoInfo) {\n      // console.log(\"THIS STATE IN RENDER: \", this.state);\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Header, {\n        videoInfo: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Hero, {\n        videoInfo: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(ImageInfo, {\n        imageInfo: this.state.videoInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Comments, {\n        comments: this.state.videoInfo.comments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        footerArray: this.state.videos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}\n\nexport default Maincontent;","map":{"version":3,"sources":["C:/Users/Brian/Desktop/Brian-Alves-Brainflix/sprint-two/src/components/Maincontent.js"],"names":["React","Component","Viewicon","Likeicon","axios","Footer","Comments","Header","Hero","ImageInfo","Maincontent","state","componentDidMount","console","log","props","videoInfo","match","params","id","theId","all","get","then","responseArray","data","setState","videos","componentDidUpdate","prevProps","prevState","render","comments"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Viewicon from \"../Assets/Icons/PNG/views.png\";\r\nimport Likeicon from \"../Assets/Icons/PNG/likes.png\";\r\nimport axios from \"axios\";\r\nimport Footer from \"./Footer\";\r\nimport Comments from \"./Comments\";\r\nimport Header from \"./Header\";\r\nimport Hero from \"./Hero\";\r\nimport ImageInfo from \"./ImageInfo\";\r\n\r\nclass Maincontent extends Component {\r\n  // console.log(\"PROPS IN MAINCONTENT\", props);\r\n  state = {};\r\n  async componentDidMount() {\r\n    console.log(\r\n      \"did the component mount? check the url: \",\r\n      this.props.videoInfo.match.params.id\r\n    );\r\n    const theId = this.props.videoInfo.match.params.id;\r\n    await axios\r\n      .all([\r\n        axios.get(\r\n          `https://project-2-api.herokuapp.com/videos?api_key=bb1b5cb2-60cb-4779-bfb3-fa4acdb34abc`\r\n        ),\r\n        axios.get(\r\n          `https://project-2-api.herokuapp.com/videos/${theId}?api_key=bb1b5cb2-60cb-4779-bfb3-fa4acdb34abc`\r\n        )\r\n      ])\r\n      .then(responseArray => {\r\n        console.log(\"RESPONSES:::::\");\r\n        console.log(responseArray[0].data);\r\n        console.log(responseArray[1].data);\r\n        this.setState({\r\n          videos: responseArray[0].data,\r\n          videoInfo: responseArray[1].data\r\n        });\r\n      });\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (this.state) {\r\n      // console.log(\"the state exists\", this.state);\r\n      if (this.state.videoInfo) {\r\n        // console.log(\"the state video info exists!\", this.state.videoInfo);\r\n        // console.log(\"the current video is:\", this.state.videoInfo.id);\r\n\r\n        if (this.state.videoInfo.id !== this.props.videoInfo.match.params.id) {\r\n          const theId = this.props.videoInfo.match.params.id;\r\n          await axios\r\n            .all([\r\n              axios.get(\r\n                `https://project-2-api.herokuapp.com/videos?api_key=bb1b5cb2-60cb-4779-bfb3-fa4acdb34abc`\r\n              ),\r\n              axios.get(\r\n                `https://project-2-api.herokuapp.com/videos/${theId}?api_key=bb1b5cb2-60cb-4779-bfb3-fa4acdb34abc`\r\n              )\r\n            ])\r\n            .then(responseArray => {\r\n              console.log(\"RESPONSES:::::\");\r\n              console.log(responseArray[0].data);\r\n              console.log(responseArray[1].data);\r\n              this.setState({\r\n                videos: responseArray[0].data,\r\n                videoInfo: responseArray[1].data\r\n              });\r\n            });\r\n        }\r\n        console.log(\r\n          \"the current video ID is: \",\r\n          this.props.videoInfo.match.params.id\r\n        );\r\n      }\r\n      if (this.state.videos) {\r\n        console.log(\"the state videos exists!\", this.state.videos);\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.videoInfo) {\r\n      // console.log(\"THIS STATE IN RENDER: \", this.state);\r\n      return (\r\n        <>\r\n          <div>\r\n            <Header videoInfo={this.state} />\r\n            <Hero videoInfo={this.state} />\r\n            <ImageInfo imageInfo={this.state.videoInfo} />\r\n            <Comments comments={this.state.videoInfo.comments} />\r\n            <Footer footerArray={this.state.videos} />\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Maincontent;\r\n"]},"metadata":{},"sourceType":"module"}